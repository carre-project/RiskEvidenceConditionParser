/*
 *  CARRE Risk Evidence Condition Parser
 *
 *  Originally made by George Drosatos in Java
 *  Converted into Javascript by Nick Portokallidis
 *  Under MIT License
 */
var RiskEvidenceConditionParser={operators:["!=","=",">=","<=",">","<","OR","AND"],parseAndEvaluateExpression:function(a){for(var b=a.split(""),c=0;c<b.length;c++)return" "!==b[c]?this.parseWithStrings(a):(console.error("ERROR: Expression cannot be empty!"),!1)},evaluate:function(a,b){console.log(Object.keys(b));var c=Object.keys(b).sort(function(a,b){return b.length>a.length});return console.log(c),c.forEach(function(c){a=RiskEvidenceConditionParser.replaceAll(a,c+" ",b[c])}),a.indexOf("OB_")>=0?!1:this.parseAndEvaluateExpression(a)},parseWithStrings:function(a){var b=this.determineOperatorPrecedenceAndLocation(a),c=b[0],d=a.substring(0,c).trim(),e=a.substring(b[1]).trim(),f=a.substring(c,b[1]).trim(),g=this.logicalOperatorType(f);if(0===g)return this.parseWithStrings(d)||this.parseWithStrings(e);if(1===g)return this.parseWithStrings(d)&&this.parseWithStrings(e);var h=this.removeParens(d),i=this.removeParens(e);return this.isNumeric(h)&&this.isNumeric(i)?this.evaluateFloat(parseFloat(h),f,parseFloat(i)):this.evaluateStr(h,f,i)},determineOperatorPrecedenceAndLocation:function(a){a=a.trim();for(var b=999999999999,c=null,d=1;3>=d;d++)for(var e=0;e<a.length+1-d;e++){var f,g=e+d;if(f=g<a.length&&"="===a[g]?a.substring(e,2+g).trim():a.substring(e,g).trim(),this.isOperator(f)){var h=this.logicalOperatorType(f)>-1?this.parens(a,e)-1:this.parens(a,e);b>=h&&(b=h,c=[e,g,h])}}return c},logicalOperatorType:function(a){return"OR"===a.trim()?0:"AND"===a.trim()?1:-1},parens:function(a,b){for(var c=0,d=0;d<a.length;d++)"("===a[d]&&b>d&&c++,")"===a[d]&&d>=b&&c++;return c},removeParens:function(a){a=a.trim();var b="";return a.split("").forEach(function(a){"("!==a&&")"!==a&&(b+=a)}),b.toString().trim()},replaceAll:function(a,b,c){return a.split(b).join(c)},isOperator:function(a){return this.operators.indexOf(a.trim())>=0},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},evaluateFloat:function(a,b,c){return"="===b?a===c:">"===b?a>c:"<"===b?c>a:"<="===b?c>=a:">="===b?a>=c:"!="===b?a!=c:(console.error("ERROR: Operator type not recognized."),!1)},fixQuotes:function(a){return a.replace(/['"]+/g,"")},evaluateStr:function(a,b,c){return"="===b||"!="===b?this.fixQuotes(a)===this.fixQuotes(c):(console.error("ERROR: Operator type not recognized."),!1)}};